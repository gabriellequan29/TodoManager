{"ast":null,"code":"var _jsxFileName = \"/Users/gabriellequan/Dev/TodoManager/frontend/todoapp/src/components/todo/ListTodosComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport TodoService from '../../api/todo/TodoService';\nimport AuthenticationService from './AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ListTodosComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todos: [],\n      message: null\n    };\n    this.refreshTodos = this.refreshTodos.bind(this);\n    this.updateTodo = this.updateTodo.bind(this);\n    this.deleteTodo = this.deleteTodo.bind(this);\n  }\n\n  componentDidMount() {\n    this.refreshTodos();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"List Todos\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-success\",\n        children: this.state.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 40\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"table\", {\n          className: \"table\",\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Description\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Completed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 35,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Target Date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: this.state.todos.map(todo => /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.description\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.completed.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: todo.targetDate.toString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => this.updateTodo(todo.id),\n                  children: \"Edit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                children: /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-danger\",\n                  onClick: () => this.deleteTodo(todo.id),\n                  children: \"Remove\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 45\n              }, this)]\n            }, todo.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n  refreshTodos() {\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoService.getAllTodos(username).then(response => this.setState({\n      todos: response.data\n    }));\n  }\n\n  updateTodo(id) {\n    this.props.navigate(`/todos/${id}`);\n  }\n\n  deleteTodo(id) {\n    let username = AuthenticationService.getLoggedInUserName();\n    TodoService.deleteTodo(username, id).then(response => {\n      this.setState({\n        message: `Todo with id ${id} was deleted`\n      });\n      this.refreshTodos();\n    });\n  }\n\n}\n\nfunction ListTodosComponentWithNavigate(props) {\n  _s();\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(ListTodosComponent, { ...props,\n    navigate: navigate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 12\n  }, this);\n}\n\n_s(ListTodosComponentWithNavigate, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ListTodosComponentWithNavigate;\nexport default ListTodosComponentWithNavigate;\n\nvar _c;\n\n$RefreshReg$(_c, \"ListTodosComponentWithNavigate\");","map":{"version":3,"sources":["/Users/gabriellequan/Dev/TodoManager/frontend/todoapp/src/components/todo/ListTodosComponent.js"],"names":["React","Component","useNavigate","TodoService","AuthenticationService","ListTodosComponent","constructor","props","state","todos","message","refreshTodos","bind","updateTodo","deleteTodo","componentDidMount","render","map","todo","description","completed","toString","targetDate","id","username","getLoggedInUserName","getAllTodos","then","response","setState","data","navigate","ListTodosComponentWithNavigate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { useNavigate } from 'react-router-dom';\nimport TodoService from '../../api/todo/TodoService'\nimport AuthenticationService from './AuthenticationService'\n\nclass ListTodosComponent extends Component {\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            todos: [],\n            message: null\n        }\n\n        this.refreshTodos = this.refreshTodos.bind(this)\n        this.updateTodo = this.updateTodo.bind(this)\n        this.deleteTodo = this.deleteTodo.bind(this)\n    }\n\n    componentDidMount() {\n        this.refreshTodos()\n\n    }\n\n    render() {\n        return (\n            <div>\n                <h1>List Todos</h1>\n                {this.state.message && <div className=\"alert alert-success\">{this.state.message}</div>}\n                <div className=\"container\">\n                    <table className=\"table\">\n                        <thead>\n                            <tr>\n                                <th>Description</th>\n                                <th>Completed</th>\n                                <th>Target Date</th>\n                                <th>Delete</th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {\n                                this.state.todos.map (\n                                    todo => \n                                        <tr key={todo.id}>\n                                            <td>{todo.description}</td>\n                                            <td>{todo.completed.toString()}</td>\n                                            <td>{todo.targetDate.toString()}</td>\n                                            <td><button className='btn btn-danger' onClick={() => this.updateTodo(todo.id)}>Edit</button></td>\n                                            <td><button className='btn btn-danger' onClick={() => this.deleteTodo(todo.id)}>Remove</button></td>\n                                        </tr>\n                                )\n                            }\n                        </tbody>\n                    </table>\n                </div>\n            </div>\n        )\n    }\n\n    refreshTodos() {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoService.getAllTodos(username)\n            .then(\n                response => this.setState({\n                    todos: response.data\n                })\n            )\n    }\n\n    updateTodo(id) {\n        this.props.navigate(`/todos/${id}`)\n    }\n\n    deleteTodo(id) {\n        let username = AuthenticationService.getLoggedInUserName()\n        TodoService.deleteTodo(username, id)\n            .then(\n                response => {\n                    this.setState({message: `Todo with id ${id} was deleted`})\n                    this.refreshTodos()\n                }\n            )\n    }\n}\n\nfunction ListTodosComponentWithNavigate(props) {\n    const navigate = useNavigate();\n    return <ListTodosComponent {...props} navigate={navigate} />\n}\n\nexport default ListTodosComponentWithNavigate"]},"metadata":{},"sourceType":"module"}