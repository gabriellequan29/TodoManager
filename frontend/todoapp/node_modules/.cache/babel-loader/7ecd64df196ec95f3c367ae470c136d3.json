{"ast":null,"code":"var _jsxFileName = \"/Users/gabriellequan/Dev/TodoManager/frontend/todoapp/src/components/todo/LoginComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AuthenticationService from './AuthenticationService';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: 'username',\n      password: '',\n      isSuccess: false,\n      isLoginFailed: false\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: [this.state.isLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning\",\n          children: \"Invalid Credentials\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 50\n        }, this), this.state.isSuccess && /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Login Successful\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 46\n        }, this), \"User Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"username\",\n          value: this.state.username,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 31\n        }, this), \"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          name: \"password\",\n          value: this.state.password,\n          onChange: this.handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-success\",\n          onClick: this.loginClicked,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    // gaby, hello123\n    AuthenticationService.executeBasicAuthenticationService(this.state.username, this.state.password).then(() => {\n      AuthenticationService.loginSucceed(this.state.username, this.state.password);\n      this.setState({\n        isSuccess: true\n      });\n      this.setState({\n        isLoginFailed: false\n      });\n      this.props.navigate(`/welcome/${this.state.username}`);\n    }).catch(() => {\n      this.setState({\n        showSuccessMessage: false\n      });\n      this.setState({\n        hasLoginFailed: true\n      });\n    });\n  }\n\n}\n\nfunction LoginComponentWithNavigate(props) {\n  _s();\n\n  const navigate = useNavigate();\n  return /*#__PURE__*/_jsxDEV(LoginComponent, { ...props,\n    navigate: navigate\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 12\n  }, this);\n}\n\n_s(LoginComponentWithNavigate, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LoginComponentWithNavigate;\nexport default LoginComponentWithNavigate;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginComponentWithNavigate\");","map":{"version":3,"sources":["/Users/gabriellequan/Dev/TodoManager/frontend/todoapp/src/components/todo/LoginComponent.js"],"names":["React","Component","useNavigate","AuthenticationService","LoginComponent","constructor","props","state","username","password","isSuccess","isLoginFailed","handleChange","bind","loginClicked","render","event","setState","target","name","value","executeBasicAuthenticationService","then","loginSucceed","navigate","catch","showSuccessMessage","hasLoginFailed","LoginComponentWithNavigate"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport AuthenticationService from './AuthenticationService';\n\nclass LoginComponent extends Component {\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            username: 'username',\n            password: '',\n            isSuccess: false,\n            isLoginFailed: false\n        }\n\n        this.handleChange = this.handleChange.bind(this)\n        this.loginClicked = this.loginClicked.bind(this)\n\n        \n\n    }\n\n    render() {\n        return (\n            \n            <div>\n                <h1>Login</h1>\n                <div className=\"container\">\n                    {this.state.isLoginFailed && <div className=\"alert alert-warning\">Invalid Credentials</div>}\n                    {this.state.isSuccess && <div>Login Successful</div> }\n                   User Name: <input type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange}/>\n                   Password: <input type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange}/>\n                    <button className=\"btn btn-success\" onClick={this.loginClicked}>Login</button>\n                </div>\n            </div>\n        )\n    }\n\n    handleChange(event) {\n        this.setState(\n            {\n                [event.target.name]\n                : event.target.value\n            }\n        )\n    }\n\n    loginClicked() {\n        // gaby, hello123\n        AuthenticationService\n        .executeBasicAuthenticationService(this.state.username, this.state.password)\n        .then(() => {\n            AuthenticationService.loginSucceed(this.state.username,this.state.password)\n            this.setState({ isSuccess: true })\n            this.setState({ isLoginFailed: false })\n            this.props.navigate(`/welcome/${this.state.username}`);\n        }).catch( () =>{\n            this.setState({showSuccessMessage:false})\n            this.setState({hasLoginFailed:true})\n        })\n    }\n\n}\n\nfunction LoginComponentWithNavigate(props) {\n    const navigate = useNavigate();\n    return <LoginComponent {...props} navigate={navigate} />\n}\n \nexport default LoginComponentWithNavigate;\n"]},"metadata":{},"sourceType":"module"}